---
- name: database | install mariadb key
  ansible.builtin.apt_key:
    keyserver: keyserver.ubuntu.com
    id: '0xF1656F24C74CD1D8'

- name: database | add mariadb repo
  ansible.builtin.apt_repository:
    repo: deb http://downloads.mariadb.com/MariaDB/{{ mariadb_version }}/repo/debian {{ debian_version }} main
    state: present
    filename: mariadb

- name: database | install mariadb packages
  ansible.builtin.package:
    pkg: '{{ item }}'
    state: present
  loop: '{{ mariadb_packages_list }}'

- name: database | allow mariadb inbound from network
  community.general.ufw:
    rule: allow
    port: mysql
    proto: tcp
    direction: in
    src: '{{ firewall_servers_subnet }}'
  when:
    - mariadb_visibility is defined
    - mariadb_visibility == 'network'

- name: database | allow galera inbound from mariadb servers
  community.general.ufw:
    rule: allow
    port: '{{ item[0] }}'
    proto: tcp
    direction: in
    src: '{{ item[1] }}'
  loop: "{{ query('nested', mariadb_galera_ports_list, mariadb_galera_hosts_list) }}"

- name: database | configure /etc/mysql/mariadb.conf.d/60-galera.cnf
  ansible.builtin.template:
    src: etc/mysql/mariadb.conf.d/60-galera.cnf.j2
    dest: /etc/mysql/mariadb.conf.d/60-galera.cnf
    owner: root
    group: root
    mode: '0644'
  notify:
    - restart mariadb

- name: database | enable and start mariadb service
  ansible.builtin.service:
    name: '{{ mariadb_service_name }}'
    enabled: true
    state: started

- name: database | create replication user
  community.mysql.mysql_user:
    login_unix_socket: '{{ mariadb_login_unix_socket }}'
    name: '{{ mariadb_galera_auth_user }}'
    host: localhost
    password: '{{ mariadb_galera_auth_password }}'
    priv: '*.*:RELOAD,PROCESS,LOCK TABLES,BINLOG MONITOR'
    state: present
  when: ( ansible_facts.hostname == mariadb_galera_bootstrap_host)
  notify:
    - restart mariadb
