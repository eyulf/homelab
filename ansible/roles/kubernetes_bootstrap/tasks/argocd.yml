---
- name: argocd | manage argocd 'flag' directory
  ansible.builtin.file:
    path: /etc/kubernetes/argocd/
    state: directory
    owner: root
    group: root
    mode: '755'
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: argocd | install argocd
  ansible.builtin.shell:
    chdir: /opt/homelab/kubernetes/core/argocd-system
    cmd: |
      helm dependencies update &&
      kubectl create namespace argocd-system &&
      helm install -n argocd-system argocd . -f values.yaml > /etc/kubernetes/argocd/argocd
    creates: /etc/kubernetes/argocd/argocd
  run_once: true
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
    - pacemaker_cluster_ip in ansible_facts['all_ipv4_addresses']

- name: argocd | pause to allow argocd to fully deploy
  ansible.builtin.pause:
    seconds: 120
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: argocd | install core-apps app
  ansible.builtin.shell:
    cmd: >
      kubectl config set-context
      --current
      --namespace=argocd-system &&
      argocd app create core-apps
      --dest-namespace argocd-system
      --dest-server https://kubernetes.default.svc
      --repo {{ git_repo_url }}
      --revision {{ git_branch }}
      --path kubernetes/core/apps
      --sync-policy auto
      --core > /etc/kubernetes/argocd/core-apps
    creates: /etc/kubernetes/argocd/core-apps
  run_once: true
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
    - pacemaker_cluster_ip in ansible_facts['all_ipv4_addresses']
