---
- name: Kubernetes Bootstrap | set variables
  ansible.builtin.include_vars: '{{ item }}'
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd
    - core
    - openebs
    - infrastructure
    - apps
  with_first_found:
    - "{{ ansible_facts['os_family'] }}.yml"
    - default.yml

- name: Kubernetes Bootstrap | pause to allow cluster to fully come online
  ansible.builtin.pause:
    seconds: 150
  tags:
    - kubernetes
    - kubernetes-bootstrap
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

# ArgoCD
- name: ArgoCD
  ansible.builtin.import_tasks: argocd.yml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

# Core Apps
- name: Core
  ansible.builtin.import_tasks: core.yml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

# OpenEBS
- name: OpenEBS
  ansible.builtin.import_tasks: openebs.yml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - openebs
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

# Infrastructure Apps
- name: Infrastructure
  ansible.builtin.import_tasks: infrastructure.yml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - infrastructure
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

# Apps Apps
- name: Apps
  ansible.builtin.import_tasks: apps.yml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - apps
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
