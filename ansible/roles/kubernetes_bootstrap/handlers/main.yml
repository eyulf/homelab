---
- name: ArgoCD | wait to allow argocd to fully deploy
  ansible.builtin.command:
    cmd: kubectl wait --namespace=argocd-system --for=condition=Ready pods --selector app.kubernetes.io/part-of=argocd --timeout=15m
  listen: wait for argocd
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - argocd

- name: Core | pause to allow ArgoCD to create the core-apps app
  ansible.builtin.pause:
    seconds: 30
  listen: pause for core-apps app
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Core | wait to allow sealed-secrets to fully deploy
  ansible.builtin.command:
    cmd: kubectl wait --namespace=kube-system --for=condition=Ready pods --selector app.kubernetes.io/name=sealed-secrets --timeout=15m
  listen: wait for sealed-secrets
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Core | wait to allow openebs to fully deploy
  ansible.builtin.command:
    cmd: kubectl wait --namespace=openebs-system --for=condition=Ready pods --selector release=openebs --timeout=15m
  listen: wait for openebs
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Core | apply /opt/homelab/kubernetes/core/openebs/ansible/cstor-pool-cluster.yaml
  ansible.builtin.command:
    chdir: /opt/homelab/kubernetes/core/openebs/ansible/
    cmd: kubectl apply -f /opt/homelab/kubernetes/core/openebs/ansible/cstor-pool-cluster.yaml
  listen: apply cstor-pool-cluster.yaml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Core | pause to allow the openebs storage cluster to start provisioning
  ansible.builtin.pause:
    seconds: 30
  listen: pause for openebs storage cluster
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Core | wait to allow the openebs storage cluster to fully provision
  ansible.builtin.command:
    cmd: kubectl wait --namespace=openebs-system --for=condition=Ready pods --selector app=cstor-pool --timeout=15m
  listen: wait for openebs storage cluster
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Core | apply /opt/homelab/kubernetes/core/openebs/ansible/cstor-storage-class.yaml
  ansible.builtin.command:
    chdir: /opt/homelab/kubernetes/core/openebs/ansible/
    cmd: kubectl apply -f /opt/homelab/kubernetes/core/openebs/ansible/cstor-storage-class.yaml
  listen: apply cstor-storage-class.yaml
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - core

- name: Infrastructure | pause to allow ArgoCD to create the infrastructure-apps app
  ansible.builtin.pause:
    seconds: 30
  listen: pause for infrastructure-apps app
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - infrastructure

- name: Infrastructure | wait to allow traefik to fully deploy
  ansible.builtin.command:
    cmd: kubectl wait --namespace=traefik-infra --for=condition=Ready pods --selector app.kubernetes.io/name=traefik --timeout=15m
  listen: wait for traefik
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - infrastructure

- name: Infrastructure | wait to allow metallb to fully deploy
  ansible.builtin.command:
    cmd: kubectl wait --namespace=metallb-system --for=condition=Ready pods --selector app.kubernetes.io/name=metallb --timeout=15m
  listen: wait for metallb
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - infrastructure

- name: Apps | pause to allow ArgoCD to create the apps-apps app
  ansible.builtin.pause:
    seconds: 30
  listen: pause for apps-apps app
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - apps

- name: Apps | wait to allow pihole to fully deploy
  ansible.builtin.command:
    cmd: kubectl wait --namespace=pihole --for=condition=Ready pods --selector app=pihole --timeout=15m
  listen: wait for pihole
  tags:
    - kubernetes
    - kubernetes-bootstrap
    - apps
