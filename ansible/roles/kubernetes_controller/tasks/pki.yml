---
- name: PKI | configure /root/.kube/config
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/admin-' + inventory_hostname + '.conf', rstrip=false) }}"
    dest: /root/.kube/config
    owner: root
    group: root
    mode: '0644'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/{{ item }}.conf # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/' + item + '-' + inventory_hostname + '.conf', rstrip=false) }}"
    dest: /etc/kubernetes/{{ item }}.conf
    owner: root
    group: root
    mode: '0644'
  loop: '{{ kubernetes_controllers_conf_host_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/{{ item }}.crt # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/' + item + '.crt', rstrip=false) }}"
    dest: /etc/kubernetes/pki/{{ item }}.crt
    owner: root
    group: root
    mode: '0644'
  loop: '{{ kubernetes_controllers_pki_crt_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/{{ item }}.key # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/' + item + '.key', rstrip=false) }}"
    dest: /etc/kubernetes/pki/{{ item }}.key
    owner: root
    group: root
    mode: '0600'
  loop: '{{ kubernetes_controllers_pki_key_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/etcd/{{ item }}.crt # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/etcd/' + item + '.crt', rstrip=false) }}"
    dest: /etc/kubernetes/pki/etcd/{{ item }}.crt
    owner: root
    group: root
    mode: '0600'
  loop: '{{ kubernetes_controllers_etcd_pki_crt_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/etcd/{{ item }}.key # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/etcd/' + item + '.key', rstrip=false) }}"
    dest: /etc/kubernetes/pki/etcd/{{ item }}.key
    owner: root
    group: root
    mode: '0600'
  loop: '{{ kubernetes_controllers_etcd_pki_key_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/etcd/{{ item }}.crt # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/etcd/' + item + '-' + inventory_hostname + '.crt', rstrip=false) }}"
    dest: /etc/kubernetes/pki/etcd/{{ item }}.crt
    owner: root
    group: root
    mode: '0644'
  loop: '{{ kubernetes_controllers_etcd_pki_crt_host_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/etcd/{{ item }}.key # noqa name[template]
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/etcd/' + item + '-' + inventory_hostname + '.key', rstrip=false) }}"
    dest: /etc/kubernetes/pki/etcd/{{ item }}.key
    owner: root
    group: root
    mode: '0600'
  loop: '{{ kubernetes_controllers_etcd_pki_key_host_files }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']

- name: PKI | configure /etc/kubernetes/pki/sa.{{ item }}
  ansible.builtin.copy: # noqa template-instead-of-copy
    content: "{{ lookup('community.sops.sops', 'etc/kubernetes/pki/sa.' + item, rstrip=false) }}"
    dest: /etc/kubernetes/pki/sa.{{ item }}
    owner: root
    group: root
    mode: '0600'
  loop:
    - key
    - pub
  tags:
    - kubernetes
    - kubernetes-controller
    - pki
  when:
    - ansible_facts['os_family'] == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
