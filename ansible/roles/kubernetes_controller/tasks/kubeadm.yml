---
- name: kubeadm | kubeadm init
  ansible.builtin.command:
    argv:
      - kubeadm
      - init
      - --pod-network-cidr={{ kubernetes_pod_network_cidr }}
      - --control-plane-endpoint={{ kubernetes_cluster_fqdn }}
    creates: /etc/kubernetes/manifests/kube-apiserver.yaml
  tags:
    - kubernetes
    - kubernetes-controller
    - kubeadm
  when:
    - ansible_os_family == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
    - pacemaker_cluster_ip in ansible_facts['all_ipv4_addresses']

- name: kubeadm | create join token
  ansible.builtin.command:
    argv:
      - kubeadm
      - token
      - create
      - --print-join-command
      - --description
      - 'Generated by Ansible for Controllers'
  register: kubernetes_join_token_cmd
  tags:
    - kubernetes
    - kubernetes-controller
    - kubeadm
  when:
    - ansible_os_family == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
    - pacemaker_cluster_ip in ansible_facts['all_ipv4_addresses']

- name: kubeadm | store join token
  ansible.builtin.add_host:
    name: k8s-dummy-host
    token_cmd: '{{ kubernetes_join_token_cmd.stdout }}'
  tags:
    - kubernetes
    - kubernetes-controller
    - kubeadm
  when:
    - ansible_os_family == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
    - pacemaker_cluster_ip in ansible_facts['all_ipv4_addresses']

- name: kubeadm | join controllers
  ansible.builtin.command:
    cmd: "{{ hostvars['k8s-dummy-host']['token_cmd'] }} --ignore-preflight-errors 'FileAvailable--etc-kubernetes-kubelet.conf' --control-plane"
    creates: /etc/kubernetes/manifests/kube-apiserver.yaml
  tags:
    - kubernetes
    - kubernetes-controller
    - kubeadm
  when:
    - ansible_os_family == 'Debian'
    - inventory_hostname in groups['k8s_controllers']
    - pacemaker_cluster_ip not in ansible_facts['all_ipv4_addresses']
